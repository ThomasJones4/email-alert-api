@startuml

title We attempt to send emails to subscribers when\n\
content changes if they have a subscription for a\n\
list that matches

hide circle
hide empty methods
skinparam shadowing false
skinparam dpi 300

package "When" {
  class ContentChange {
    [match criteria]
    title
    base_path
    change_note
  }
}

package "Who" {
  class Subscriber {
    address
  }
}

package "Why" {
  class SubscriberList {
    [match criteria]
    title
  }

  class Subscription {
    subscriber_id
    frequency
  }
}

package "What" {
  class EmailEntry {
    email_id
    content_change_id
    subscription_id
  }

  class Email {
    subject
    body
    recipient
  }
}

package "How" {
  class DeliveryAttempt {
    email_id
    state
    error_message
  }
}

Subscriber o-down-> Subscription
Subscription -down-> SubscriberList

EmailEntry -down-> ContentChange
EmailEntry -down-> Subscription
EmailEntry -up-> Email

DeliveryAttempt -left-> Email

@enduml
